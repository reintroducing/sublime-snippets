<snippet>
    <content><![CDATA[
/**
Description.

@requires

@author [${1:Matt Przybylski}](mailto:${2:mprzybylski@sapient.com})

@example
**/
;(function(\$, window, document, undefined) {
    'use strict';

    /* ----------------------------------------------------------------------------- *\
       Private Properties
    \* ----------------------------------------------------------------------------- */

    var pluginName = '${3:pluginName}',
        defaults = {

        };

    /* ----------------------------------------------------------------------------- *\
       Constructor
    \* ----------------------------------------------------------------------------- */

    /**
    @constructor
    **/
    function ${4:Plugin}(element, options) {
        this.settings = \$.extend(true, {}, defaults, options);
        this.element = element;
        this.\$el = \$(element);

        this._init();
    }

    /* ----------------------------------------------------------------------------- *\
       Private Methods
    \* ----------------------------------------------------------------------------- */

    /**
    @method _init

    @return {null}
    **/
    ${4:Plugin}.prototype._init = function() {
        ${5}
    };

    /* ----------------------------------------------------------------------------- *\
       Plugin Initialization
    \* ----------------------------------------------------------------------------- */

    \$.fn[pluginName] = function(options) {
        return this.each(function() {
            if (!\$.data(this, 'plugin_' + pluginName)) {
                \$.data(this, 'plugin_' + pluginName, new ${4:Plugin}(this, options));
            }
        });
    };
})(jQuery, window, document);
]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>plugin</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <!-- <scope>source.js</scope> -->
</snippet>
